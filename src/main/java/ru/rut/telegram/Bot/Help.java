package ru.rut.telegram.Bot;

import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;

import java.util.ArrayList;
import java.util.List;

@Service
public class Help {
    private String commandList = "2.1.1 /start - Регистрация сотрудника-обходчика путей (команда /start вызывается по умолчанию при начале работы с ботом в Telegram). После запуска бота, приложение должно создать в базе данных нового сотрудника, сохранив его login (username) и идентификатор чата (идентификатор чата - это диалог сотрудника с ботом, информация о нем отправляется самим мессенджером, формировать его не нужно)\n" +
            "\n" +
            "2.1.2 /my_work – Получение графика работы сотрудником. После выполнения этой команды, сотрудник должен получить сообщение с данными о его графике работы. Если график не назначен, должен быть отправлен текст с предложением запросить новые рабочие смены. В случае если график назначен, обходчик должен получить сообщение со списком его рабочих смен, с указанием в каждой даты смены и списка участков, которые необходимо обойти.\n" +
            "\n" +
            "2.1.3 /request_work – Запрос рабочих смен. При отправке этой команды сотрудником, бот должен отправить администраторам сообщение о необходимости назначить рабочие смены запросившему сотруднику, т.е должно быть отправлено сообщение, содержащее логин обходчика и текст с просьбой назначит смены.\n" +
            "\n" +
            "2.1.4 /start_work – Открытие рабочей смены. При выполнении команды, должна быть открыта следующая рабочая смена с сохранением даты ее открытия. В ответ обходчик должен получить сообщение со списком участков, которые необходимо пройти (опционально, можно добавить состояние участков на момент предыдущего обхода, например, чтобы подтвердить, что требуемый ремонта участок был отремонтирован после прошлой смены). Не должно быть возможности открыть две смены. Каждая открытая смена, должна быть закрыта, до открытия следующей.\n" +
            "\n" +
            "2.1.5 /region_ok – Подтверждение приемлемого состояния участка. При вызове команды, должен быть отмечен статус первого участка, не имеющего статуса в текущей смене\n" +
            "\n" +
            "2.1.6 /region_not_ok – Подтверждение, что участок требует ремонта. При вызове команды, должен быть отмечен статус первого участка, не имеющего статуса в текущей смене\n" +
            "\n" +
            "2.1.7 /end_work – Закрытие открытой смены. Должна быть закрыта последняя открытая смена. При отсутствии открытой смены, нужно отправить сообщение, что нет открытых смен и закрыть нечего. "
            + "\n" +
            "2.1.8 /my_work_regions";

    public List<SendMessage> getCommandList(Message message) {
        List<SendMessage> messageList = new ArrayList<>();
        SendMessage sendMessage = new SendMessage();
        sendMessage.setChatId(message.getChatId().toString());

        sendMessage.setText(commandList);
        messageList.add(sendMessage);
        return messageList;
    }
}
